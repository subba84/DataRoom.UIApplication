@model List<DataRooms.UI.Models.ItemTrackerControl>

<div class="form-group row" style="padding:3px;">
    <div class="col-lg-2" style="display:none">
        <label class="col-sm-6 font-weight-bold">SharBox</label>
        <input type="text" class="form-control" readonly id="txtItemTrackerControlDataRoomName" />
        <input type="hidden" id="hdnItemTrackerControlDataRoomId"/>
    </div>
    <div class="col-lg-2" style="display:none">
        <label class="col-sm-6 font-weight-bold">Folder</label>
        <input type="text" class="form-control" readonly id="txtItemTrackerControlFolderName" />
        <input type="hidden" id="hdnItemTrackerControlFolderId" />
    </div>
    <div class="col-lg-8" id="divItemTrackerNameGrid">
        <label class="col-sm-9 font-weight-bold">Item Tracker</label>
        <input type="text" class="form-control" readonly id="txtItemTrackerControlItemTrackerName" />
        <input type="hidden" id="hdnItemTrackerControlItemTrackerId" />
    </div>
</div>
<div class="form-group row">
    <div class="col-lg-6">

    </div>
    <div class="col-lg-6">
        <input type="button" value="Add Control" class="btn btn-primary" id="btnAddControl" style="float:right" />
    </div>
</div>
<div class="col-lg-12" style="font-size:12px;">
    <table class="table table-bordered" cellpadding="0" cellspacing="0">
        <thead>
            <tr class="tbl-header">
                <th>S.No.</th>
                <th>Control Type</th>
                <th>Control Name</th>
                <th colspan="1">Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count > 0)
            {
                var consolidatedData = from c in Model
                                       group c by new
                                       {
                                           c.ControlType,
                                           //c.ControlName,
                                           c.ParentGuid
                                       } into gcs
                                       select new DataRooms.UI.Models.ItemTrackerControl()
                                       {
                                           ControlType = gcs.Key.ControlType,
                                           //ControlName = gcs.Key.ControlName,
                                           ParentGuid = gcs.Key.ParentGuid
                                       };
                if (consolidatedData != null && consolidatedData.Count() > 0)
                {
                    int i = 1;
                    foreach (var control in consolidatedData)
                    {
                        <tr>
                            <td style="text-align:center">@i</td>
                            <td>
                                @{
                                    string controlType = string.Empty;
                                    switch (Convert.ToInt32(control.ControlType))
                                    {
                                        case ControlType.TextBox:
                                            controlType = "TextBox";
                                            break;
                                        case ControlType.Dropdown:
                                            controlType = "Dropdown";
                                            break;
                                        case ControlType.TwoLevelDropDown:
                                            controlType = "2 Level Dropdown";
                                            break;
                                        case ControlType.ThreeLevelDropdown:
                                            controlType = "3 Level Dropdown";
                                            break;
                                        case ControlType.FileUpload:
                                            controlType = "File Upload";
                                            break;
                                        case ControlType.DateControl:
                                            controlType = "Date";
                                            break;
                                    }
                                }
                                @controlType
                            </td>
                            <td>
                                @{
                                    string controlName = string.Empty;
                                    controlName = Model.Where(x => x.ParentGuid == control.ParentGuid).First().ControlName;
                                }
                                @controlName
                            </td>
                            @*<td style="text-align:center">
                                <a href="#"><i class="las la-edit fa-lg"></i> </a>
                            </td>*@
                            <td style="text-align:center">
                                <a href="#" data-guid="@control.ParentGuid" class="deleteItemTrackerControl"><i class="las la-trash fa-lg" style="color:red;"></i> </a>
                            </td>
                        </tr>
                        i++;
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">No Controls Found..</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4">No Controls Found..</td>
                </tr>
            }


        </tbody>
    </table>
</div>
